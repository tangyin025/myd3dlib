<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="src\lib_aux.c" />
    <ClCompile Include="src\lib_base.c" />
    <ClCompile Include="src\lib_bit.c" />
    <ClCompile Include="src\lib_buffer.c" />
    <ClCompile Include="src\lib_debug.c" />
    <ClCompile Include="src\lib_ffi.c" />
    <ClCompile Include="src\lib_init.c" />
    <ClCompile Include="src\lib_io.c" />
    <ClCompile Include="src\lib_jit.c" />
    <ClCompile Include="src\lib_math.c" />
    <ClCompile Include="src\lib_os.c" />
    <ClCompile Include="src\lib_package.c" />
    <ClCompile Include="src\lib_string.c" />
    <ClCompile Include="src\lib_table.c" />
    <ClCompile Include="src\lj_alloc.c" />
    <ClCompile Include="src\lj_api.c" />
    <ClCompile Include="src\lj_asm.c" />
    <ClCompile Include="src\lj_assert.c" />
    <ClCompile Include="src\lj_bc.c" />
    <ClCompile Include="src\lj_bcread.c" />
    <ClCompile Include="src\lj_bcwrite.c" />
    <ClCompile Include="src\lj_buf.c" />
    <ClCompile Include="src\lj_carith.c" />
    <ClCompile Include="src\lj_ccall.c" />
    <ClCompile Include="src\lj_ccallback.c" />
    <ClCompile Include="src\lj_cconv.c" />
    <ClCompile Include="src\lj_cdata.c" />
    <ClCompile Include="src\lj_char.c" />
    <ClCompile Include="src\lj_clib.c" />
    <ClCompile Include="src\lj_cparse.c" />
    <ClCompile Include="src\lj_crecord.c" />
    <ClCompile Include="src\lj_ctype.c" />
    <ClCompile Include="src\lj_debug.c" />
    <ClCompile Include="src\lj_dispatch.c" />
    <ClCompile Include="src\lj_err.c" />
    <ClCompile Include="src\lj_ffrecord.c" />
    <ClCompile Include="src\lj_func.c" />
    <ClCompile Include="src\lj_gc.c" />
    <ClCompile Include="src\lj_gdbjit.c" />
    <ClCompile Include="src\lj_ir.c" />
    <ClCompile Include="src\lj_lex.c" />
    <ClCompile Include="src\lj_lib.c" />
    <ClCompile Include="src\lj_load.c" />
    <ClCompile Include="src\lj_mcode.c" />
    <ClCompile Include="src\lj_meta.c" />
    <ClCompile Include="src\lj_obj.c" />
    <ClCompile Include="src\lj_opt_dce.c" />
    <ClCompile Include="src\lj_opt_fold.c" />
    <ClCompile Include="src\lj_opt_loop.c" />
    <ClCompile Include="src\lj_opt_mem.c" />
    <ClCompile Include="src\lj_opt_narrow.c" />
    <ClCompile Include="src\lj_opt_sink.c" />
    <ClCompile Include="src\lj_opt_split.c" />
    <ClCompile Include="src\lj_parse.c" />
    <ClCompile Include="src\lj_prng.c" />
    <ClCompile Include="src\lj_profile.c" />
    <ClCompile Include="src\lj_record.c" />
    <ClCompile Include="src\lj_serialize.c" />
    <ClCompile Include="src\lj_snap.c" />
    <ClCompile Include="src\lj_state.c" />
    <ClCompile Include="src\lj_str.c" />
    <ClCompile Include="src\lj_strfmt.c" />
    <ClCompile Include="src\lj_strfmt_num.c" />
    <ClCompile Include="src\lj_strscan.c" />
    <ClCompile Include="src\lj_tab.c" />
    <ClCompile Include="src\lj_trace.c" />
    <ClCompile Include="src\lj_udata.c" />
    <ClCompile Include="src\lj_vmevent.c" />
    <ClCompile Include="src\lj_vmmath.c" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="src\lj_bcdef.h" />
    <ClInclude Include="src\lj_ffdef.h" />
    <ClInclude Include="src\lj_folddef.h" />
    <ClInclude Include="src\lj_libdef.h" />
    <ClInclude Include="src\lj_recdef.h" />
  </ItemGroup>
  <ItemGroup>
    <Object Include="src\lj_vm.obj" />
  </ItemGroup>
  <ItemGroup>
    <None Include="src\jit\vmdef.lua" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{a21d63f5-fd44-42f3-88a8-59929d40f4d6}</ProjectGuid>
    <RootNamespace>LuaJIT</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <IntDir>$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <IntDir>$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <IntDir>$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <IntDir>$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;WIN32;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
    </ClCompile>
    <Link>
      <SubSystem>
      </SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <PreBuildEvent>
      <Command>@setlocal
cd /d src
@set ALL_LIB=lib_base.c lib_math.c lib_bit.c lib_string.c lib_table.c lib_io.c lib_os.c lib_package.c lib_debug.c lib_jit.c lib_ffi.c lib_buffer.c
$(TargetDir)buildvm.exe -m peobj -o lj_vm.obj
$(TargetDir)buildvm.exe -m bcdef -o lj_bcdef.h %ALL_LIB%
$(TargetDir)buildvm.exe -m ffdef -o lj_ffdef.h %ALL_LIB%
$(TargetDir)buildvm.exe -m libdef -o lj_libdef.h %ALL_LIB%
$(TargetDir)buildvm.exe -m recdef -o lj_recdef.h %ALL_LIB%
$(TargetDir)buildvm.exe -m vmdef -o jit\vmdef.lua %ALL_LIB%
$(TargetDir)buildvm.exe -m folddef -o lj_folddef.h lj_opt_fold.c
@endlocal</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;WIN32;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
    </ClCompile>
    <Link>
      <SubSystem>
      </SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <PreBuildEvent>
      <Command>@setlocal
cd /d src
@set ALL_LIB=lib_base.c lib_math.c lib_bit.c lib_string.c lib_table.c lib_io.c lib_os.c lib_package.c lib_debug.c lib_jit.c lib_ffi.c lib_buffer.c
$(TargetDir)buildvm.exe -m peobj -o lj_vm.obj
$(TargetDir)buildvm.exe -m bcdef -o lj_bcdef.h %ALL_LIB%
$(TargetDir)buildvm.exe -m ffdef -o lj_ffdef.h %ALL_LIB%
$(TargetDir)buildvm.exe -m libdef -o lj_libdef.h %ALL_LIB%
$(TargetDir)buildvm.exe -m recdef -o lj_recdef.h %ALL_LIB%
$(TargetDir)buildvm.exe -m vmdef -o jit\vmdef.lua %ALL_LIB%
$(TargetDir)buildvm.exe -m folddef -o lj_folddef.h lj_opt_fold.c
@endlocal</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
    </ClCompile>
    <Link>
      <SubSystem>
      </SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <PreBuildEvent>
      <Command>@setlocal
cd /d src
@set ALL_LIB=lib_base.c lib_math.c lib_bit.c lib_string.c lib_table.c lib_io.c lib_os.c lib_package.c lib_debug.c lib_jit.c lib_ffi.c lib_buffer.c
$(TargetDir)buildvm.exe -m peobj -o lj_vm.obj
$(TargetDir)buildvm.exe -m bcdef -o lj_bcdef.h %ALL_LIB%
$(TargetDir)buildvm.exe -m ffdef -o lj_ffdef.h %ALL_LIB%
$(TargetDir)buildvm.exe -m libdef -o lj_libdef.h %ALL_LIB%
$(TargetDir)buildvm.exe -m recdef -o lj_recdef.h %ALL_LIB%
$(TargetDir)buildvm.exe -m vmdef -o jit\vmdef.lua %ALL_LIB%
$(TargetDir)buildvm.exe -m folddef -o lj_folddef.h lj_opt_fold.c
@endlocal</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
    </ClCompile>
    <Link>
      <SubSystem>
      </SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <PreBuildEvent>
      <Command>@setlocal
cd /d src
@set ALL_LIB=lib_base.c lib_math.c lib_bit.c lib_string.c lib_table.c lib_io.c lib_os.c lib_package.c lib_debug.c lib_jit.c lib_ffi.c lib_buffer.c
$(TargetDir)buildvm.exe -m peobj -o lj_vm.obj
$(TargetDir)buildvm.exe -m bcdef -o lj_bcdef.h %ALL_LIB%
$(TargetDir)buildvm.exe -m ffdef -o lj_ffdef.h %ALL_LIB%
$(TargetDir)buildvm.exe -m libdef -o lj_libdef.h %ALL_LIB%
$(TargetDir)buildvm.exe -m recdef -o lj_recdef.h %ALL_LIB%
$(TargetDir)buildvm.exe -m vmdef -o jit\vmdef.lua %ALL_LIB%
$(TargetDir)buildvm.exe -m folddef -o lj_folddef.h lj_opt_fold.c
@endlocal</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>